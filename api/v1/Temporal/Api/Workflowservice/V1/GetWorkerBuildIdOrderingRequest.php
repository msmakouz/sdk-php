<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/workflowservice/v1/request_response.proto

namespace Temporal\Api\Workflowservice\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * (-- api-linter: core::0134::request-resource-required=disabled
 *     aip.dev/not-precedent: GetWorkerBuildIdOrderingRequest RPC doesn't follow Google API format. --)
 *
 * Generated from protobuf message <code>temporal.api.workflowservice.v1.GetWorkerBuildIdOrderingRequest</code>
 */
class GetWorkerBuildIdOrderingRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     */
    protected $namespace = '';
    /**
     * Must be set, the task queue to interrogate about worker id ordering
     *
     * Generated from protobuf field <code>string task_queue = 2;</code>
     */
    protected $task_queue = '';
    /**
     * Limits how deep the returned DAG will go. 1 will return only the
     * default build id. A default/0 value will return the entire graph.
     *
     * Generated from protobuf field <code>int32 max_depth = 3;</code>
     */
    protected $max_depth = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $namespace
     *     @type string $task_queue
     *           Must be set, the task queue to interrogate about worker id ordering
     *     @type int $max_depth
     *           Limits how deep the returned DAG will go. 1 will return only the
     *           default build id. A default/0 value will return the entire graph.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Workflowservice\V1\RequestResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * Must be set, the task queue to interrogate about worker id ordering
     *
     * Generated from protobuf field <code>string task_queue = 2;</code>
     * @return string
     */
    public function getTaskQueue()
    {
        return $this->task_queue;
    }

    /**
     * Must be set, the task queue to interrogate about worker id ordering
     *
     * Generated from protobuf field <code>string task_queue = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTaskQueue($var)
    {
        GPBUtil::checkString($var, True);
        $this->task_queue = $var;

        return $this;
    }

    /**
     * Limits how deep the returned DAG will go. 1 will return only the
     * default build id. A default/0 value will return the entire graph.
     *
     * Generated from protobuf field <code>int32 max_depth = 3;</code>
     * @return int
     */
    public function getMaxDepth()
    {
        return $this->max_depth;
    }

    /**
     * Limits how deep the returned DAG will go. 1 will return only the
     * default build id. A default/0 value will return the entire graph.
     *
     * Generated from protobuf field <code>int32 max_depth = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxDepth($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_depth = $var;

        return $this;
    }

}

